@model IEnumerable<WebAppAsp1.Models.EntetiesModel.GroupModel>

@{
    ViewBag.Title = "Groups";
    ViewData["heading"] = "Groups";
    ViewData["GroupsActive"] = "active";
    if ((string)ViewData["all"] == "active")
    {
        ViewData["edit_btn"] = "hidden";
    }
    else
    {
        ViewData["edit_btn"] = "";
    }
}

<div class="row">
    <div class="display right col-md-12">
        <a class="btn @ViewData["my"]" href="/Group/Groups?type=mygroups">My groups</a>
        <a class="btn @ViewData["all"]" href="/Group/Groups?type=allgroups">All groups</a>
        <a id="gr-display-type-list" class="glyphicon glyphicon-th-list btn active" onclick="gr_display_as_list()"></a>
        <a id="gr-display-type-plite" class="glyphicon glyphicon-th-large btn" onclick="gr_display_as_plite()"></a>
    </div>
</div>
@if (!Model.Any())
{
    if (User.IsInRole("Trainer"))
    {
        <p>Вы не создали ни одной группы</p>
    }
    else
    {
        <p>Вы не подписались ни на одну группу</p>
    }
}
else
{
    <div class="list-group groups_container row">
        @if (Model.Count() == 1)
        {
            <div class="row" style="padding-left: 30px; padding-right: 30px;">
                @{
                    var item = Model.ToList()[0];
                }
                <div class="list-group-item col-md-12 group_container" onclick="goGroupA('@item.Id');" style="cursor: pointer">
                    <div class="row">
                        <h3 class="list-group-item-heading col-md-9">@Html.DisplayFor(modelItem => item.Name)</h3>
                        <div class="group_edit hidden col-md-3 text-right">
                            <a href="/Group/EditGroup?groupId=@item.Id" class="btn btn-primary @ViewData["edit_btn"]">Edit</a>
                        </div>
                    </div>
                    <div class="list-group-item-text">
                        <p>
                            @Html.DisplayNameFor(model => model.Trainer) : <b><a href="/Profile/Trainer?id=@item.Trainer">@Html.DisplayFor(modelItem => item.TrainerName)</a></b>
                        </p>
                        <p>
                            @Html.DisplayNameFor(model => model.Training) : <b><a href="/Training/Training?id=@item.Training">@Html.DisplayFor(modelItem => item.TrainingName)</a></b>
                        </p>
                        <p>
                            Clients: <b>@Html.DisplayFor(modelItem => item.Clientsnow)/@Html.DisplayFor(modelItem => item.Clientmax)</b>
                        </p>
                        <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    </div>

                </div>


            </div>
        }
        else
        {
            for (int i = 0; i < Model.ToList().Count() - 1; i++)
            {
                <div class="row" style="padding-left: 30px; padding-right: 30px;">
                    @{
                        var item = Model.ToList()[i];
                    }
                    <div class="list-group-item col-md-12 group_container" onclick="goGroupA('@item.Id');" style="cursor: pointer">
                        <div class="row">
                            <h3 class="list-group-item-heading col-md-9">@Html.DisplayFor(modelItem => item.Name)</h3>
                            <div class="group_edit hidden col-md-3 text-right">
                                <a href="/Group/EditGroup?groupId=@item.Id" class="btn btn-primary @ViewData["edit_btn"]">Edit</a>
                            </div>
                        </div>
                        <div class="list-group-item-text">
                            <p>
                                @Html.DisplayNameFor(model => model.Trainer) : <b><a href="/Profile/Trainer?id=@item.Trainer">@Html.DisplayFor(modelItem => item.TrainerName)</a></b>
                            </p>
                            <p>
                                @Html.DisplayNameFor(model => model.Training) : <b><a href="/Training/Training?id=@item.Training">@Html.DisplayFor(modelItem => item.TrainingName)</a></b>
                            </p>
                            <p>
                                Clients: <b>@Html.DisplayFor(modelItem => item.Clientsnow)/@Html.DisplayFor(modelItem => item.Clientmax)</b>
                            </p>
                            <p>@Html.DisplayFor(modelItem => item.Description)</p>
                        </div>

                    </div>

                    @{
                        i++;
                        item = Model.ToList()[i];
                    }
                    <div class="list-group-item col-md-12 group_container" onclick="goGroupA('@item.Id');" style="cursor: pointer">
                        <div class="row">
                            <h3 class="list-group-item-heading col-md-9">@Html.DisplayFor(modelItem => item.Name)</h3>
                            <div class="group_edit hidden col-md-3 text-right">
                                <a href="/Group/EditGroup?groupId=@item.Id" class="btn btn-primary @ViewData["edit_btn"]">Edit</a>
                            </div>
                        </div>
                        <div class="list-group-item-text">
                            <p>
                                @Html.DisplayNameFor(model => model.Trainer) : <b><a href="/Profile/Trainer?id=@item.Trainer">@Html.DisplayFor(modelItem => item.TrainerName)</a></b>
                            </p>
                            <p>
                                @Html.DisplayNameFor(model => model.Training) : <b><a href="/Training/Training?id=@item.Training">@Html.DisplayFor(modelItem => item.TrainingName)</a></b>
                            </p>
                            <p>
                                Clients: <b>@Html.DisplayFor(modelItem => item.Clientsnow)/@Html.DisplayFor(modelItem => item.Clientmax)</b>
                            </p>
                            <p>@Html.DisplayFor(modelItem => item.Description)</p>
                        </div>

                    </div>

                </div>
            }
        }
    </div>
}
@if (User.IsInRole("Trainer"))
{
    <div class="row col-md-12">
        @Html.ActionLink("Create", "CreateGroup", "Group", new { @class = "btn btn-primary" })
    </div>
}
